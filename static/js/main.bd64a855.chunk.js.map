{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","this","props","name","username","email","id","className","alt","src","React","Component","CardList","robots","map","item","index","SearchBox","searchChange","type","placeholder","onChange","App","style","overflowY","border","height","margin","children","ErrorBoundry","state","hasError","error","info","setState","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Scroll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kDCJRQ,E,4JACF,WACI,MAAsCC,KAAKC,MAAnCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,GAC/B,OACI,cAAC,WAAD,UACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,gCACI,6BAAKH,IACL,4BAAIE,IACJ,4BAAID,gB,GAVTM,IAAMC,WAkBVX,ICHAY,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OAAO,cAAC,WAAD,UAECA,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACP,cAAC,EAAD,CACIV,GAAIS,EAAKT,GACTH,KAAMY,EAAKZ,KACXC,SAAUW,EAAKX,SACfC,MAAOU,EAAKV,OAJLW,SCNrBC,E,4JACF,WAEI,IAAQC,EAAiBjB,KAAKC,MAAtBgB,aACR,OACI,8BACI,uBACIX,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,U,GAVNR,IAAMC,WAiBfM,ICjBTK,E,4JACF,WACI,OAAO,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,OAAQ,QAAvF,SACF1B,KAAKC,MAAM0B,e,GAHNlB,IAAMC,WAQTW,ICaAO,G,wDApBX,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IACD4B,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBhC,KAAKiC,SAAS,CAAEH,UAAU,M,oBAG9B,WAEI,OADqB9B,KAAK6B,MAAlBC,SAEG,mFAGJ9B,KAAKC,MAAM0B,a,GAjBCjB,cCiDZW,E,kDA3CX,aAAe,IAAD,8BACV,gBAcJa,eAAiB,SAACC,GACd,EAAKF,SAAS,CAAEG,YAAaD,EAAME,OAAOC,SAd1C,EAAKT,MAAQ,CACTjB,OAAQ,GACRwB,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBG,MAAM,8CACD9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAC1BhD,MAAK,SAAAiD,GAAK,OAAI,EAAKT,SAAS,CAAErB,OAAQ8B,S,oBAS/C,WAEI,MAAgC1C,KAAK6B,MAA7BjB,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YAEVO,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAGzD,OAAQlC,EAAOoC,OAGP,sBAAK1C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAcjB,KAAKkC,iBAC9B,cAACe,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUrC,OAAQ+B,WAPlC,gD,GA7BMlC,IAAMC,WCAxBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.bd64a855.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nclass Card extends React.Component {\n    render() {\n        const { name, username, email, id } = this.props;\n        return (\n            <Fragment>\n                <div className='bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n                    <img alt='test' src={`https://robohash.org/${id}?200x200`} />\n                    <div>\n                        <h2>{name}</h2>\n                        <p>{email}</p>\n                        <p>{username}</p>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n//Always export so you can access\nexport default Card;","import React, { Fragment } from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n\n    return <Fragment>\n        {\n            robots.map((item, index) =>\n                <Card key={index}\n                    id={item.id}\n                    name={item.name}\n                    username={item.username}\n                    email={item.email} />)\n        }\n    </Fragment>\n\n}\n\nexport default CardList;","import React from \"react\";\n\nclass SearchBox extends React.Component {\n    render() {\n\n        const { searchChange } = this.props;\n        return (\n            <div>\n                <input\n                    className='pa3 ba b--green bg-lightest-blue'\n                    type=\"search\"\n                    placeholder=\"search robots\"\n                    onChange={searchChange}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SearchBox;","import React from \"react\";\n\nclass App extends React.Component {\n    render() {\n        return <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px', margin: '20px' }}>\n            {this.props.children}\n        </div>\n    }\n}\n\nexport default App;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        const { hasError } = this.state;\n        if (hasError) {\n            return <h1>Ooops. Sorry about that we unplugged something...</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users })\n            );\n    }\n\n    //Random method name\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value })\n    }\n\n    render() {\n        //Set varaibles for state\n        const { robots, searchField } = this.state;\n\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n\n        return !robots.length ?\n            <h1>Loading...</h1>\n            : (\n                <div className='tc'>\n                    <h1>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}